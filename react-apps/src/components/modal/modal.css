/* Modal.css */
/*
Fixed Position:
When an element is given position: fixed;, it is positioned relative to the viewport 
(the browser window) rather than its containing element.
This ensures that the modal overlay covers the entire screen, regardless of the scroll position of the document.

Overlaying Content:
The purpose of the modal overlay is to cover the existing content and bring attention to the modal itself.
By setting position: fixed; and using width: 100%; and height: 100%;, the modal overlay spans the full 
width and height of the viewport.

The display: flex;, justify-content: center;, and align-items: center; properties are used to 
center the modal within the viewport both horizontally and vertically.
*/

.modal-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000; /* Set a high z-index value to ensure the modal is on top */
    margin: 0 auto;
  }
  
  .modal-content {
    background-color: white;
    padding: 40px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    position: relative;
    z-index: 1001; /* Set a higher z-index value than the container to ensure it's on top */
  }
  
  .close-button {
    position: absolute;
    top: 0px;
    right: 0px;
    cursor: pointer;
    margin-bottom: 20px;
  }
  
  .modal-footer {
    margin-top: 20px;
    display: flex;
    justify-content: space-between;
  }
  

  .top-container{
    display: flex;
    justify-content: center;
    align-items: center;
  }
  /* 
If the modal is working as expected even when you remove the z-index properties, there might be a few reasons for this:

Default Stacking Order:

By default, elements are stacked in the order in which they appear in the HTML document. If the modal elements are positioned later in the document, they might naturally appear on top of other content.
No Other Overlapping Elements:

If there are no other elements that overlap with the modal, the stacking order might not be visually apparent. The modal might still appear on top because there's no content to overlap or obscure it.
No Other Positioned Elements:

If there are no other positioned elements with a z-index property, the stacking order might not be affected. The stacking context is created when an element is positioned (not static) and has a z-index value other than auto.
While the z-index property is commonly used to control the stacking order of positioned elements, it's not always necessary if the default stacking order meets the visual requirements.*/
  